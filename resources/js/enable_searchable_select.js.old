// $(function () {
//     $('.searchable-select').select2({
//         theme: 'bootstrap-5',
//         width: '100%',
//     });
// });

// $(document).on('select2:open', (e) => {
//     const selectId = e.target.id

//     $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (
//         key,
//         value,
//     ){
//         value.focus();
//     })
// })

// Use async/await with DOMContentLoaded event to initialize Select2
document.addEventListener('DOMContentLoaded', async () => {
    const searchableSelects = document.querySelectorAll('.searchable-select');

    for (const select of searchableSelects) {
        await initializeSelect2(select);
    }
});

// Dynamically import Select2 and jQuery, then initialize Select2
async function initializeSelect2(selectElement) {
    // Dynamically import the required libraries
    // const [Select2, $] = await Promise.all([
    //     import('select2'),
    //     import('jquery').then((module) => module.default),
    // ]);

    // Initialize Select2 with options
    // $(selectElement).select2({
    //     theme: 'bootstrap-5',
    //     width: '100%',
    // });

    // Log the selectElement for debugging purposes
    console.log($(selectElement));
}


// Use arrow function and template literals for the event listener
document.addEventListener('select2:open', (e) => {
    const selectId = e.target.id;
    const searchField = document.querySelector(
        `.select2-search__field[aria-controls='select2-${selectId}-results']`
    );
    searchField?.focus(); // Use optional chaining to handle potential null value
});
